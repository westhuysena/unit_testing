version: 2.1

orbs:
  # Use the Python orb, which provides access to pre-defined common job steps for Python builds.
  # For list of available steps, see: https://circleci.com/orbs/registry/orb/circleci/python
  python: circleci/python@0.2.1     # Numbers behind @ pins the version of the orb.

jobs:
  build:
    #executor: python/default      # Orb pre-defined step: Load docker image (equivalent to next 2 lines)
    docker: # Run the steps with Docker. CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.6.4
    steps:
      - checkout
      - python/load-cache       # Orb pre-defined step: Loads cached results from the previous iteration of the build job (saves time).
      - python/install-deps     # Orb pre-defined step: Installs app dependencies (e.g. Python packages) listed in requirements.txt
      - python/save-cache       # Orb pre-defined step: Saves build results in cache for the next iteration of the build job.
      - run: mkdir -p my_workspace
      - persist_to_workspace:
           root: my_workspace
           path: .
  test:
    docker:
      - image: circleci/python:3.6.4
    steps:
      - checkout                # These repeated steps are needed because the two jobs are independent.
      - attach_workspace:
           at: my_workspace
      #- python/install-deps     # Can be avoided by passing a workspace from the build job to the test job.
      - run:
          name: Test
          command: python -m pytest -v --junit-xml=test-reports/junit.xml
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

workflows:
  main:
    jobs:
      - build
      - test:
          requires:
              - build