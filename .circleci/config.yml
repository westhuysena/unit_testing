version: 2.1

orbs:
  # Use the Python orb, which provides access to pre-defined common job steps for Python builds.
  # For list of available steps, see: https://circleci.com/orbs/registry/orb/circleci/python
  python: circleci/python@0.2.1     # Numbers behind @ pins the version of the orb.
  aws-cli: circleci/aws-cli@1.0.0

jobs:
  build:
    #executor: python/default      # Orb pre-defined step: Load docker image (equivalent to next 2 lines)
    docker: # Run the steps with Docker. CircleCI Python images available at: https://hub.docker.com/r/circleci/python/
      - image: circleci/python:3.6.4
      #- image: avdwest/pytest_image:1.0   # Custom docker image with Python 3.6.10 and pytest
    steps:
      - checkout
      - run:
          name: Setup VirtualEnv
          command: |
            virtualenv calc_env
            . calc_env/bin/activate
            pip install --no-cache-dir -r requirements.txt
      - run:
          name: Run Tests
          command: |
            . calc_env/bin/activate
            python -m pytest -v test_calc.py
      - setup_remote_docker
          #docker_layer_caching: true     # This option is not included in the circleci free tier :(
      - run:
          name: Build and push Docker image
          command: |
            . calc_env/bin/activate
            pyinstaller -F calc.py
            docker build -t avdwest/pytest_image:2.0 .
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push avdwest/pytest_image:2.0
      #- run:
      #    name: Deploy Over SSH (using Docker on AWS)
      #    command: |
      #      #ssh $SSH_USER$SSH_HOST "<remote deploy command>"
      #      #ssh -o StrictHostKeyChecking=no root@hello.dpunks.org "/bin/bash ./deploy_app.sh ariv3ra/$IMAGE_NAME:$TAG"
      #      ssh root@hello.dpunks.org "/bin/bash ./deploy_app.sh avdwest/pytest_image:2.0"
  deploy_aws:
    executor: aws-cli/default
    steps:
      #- aws-cli/install   # This doesn't appear to be necessary (executor already installs awscli?)
      - aws-cli/setup:
          profile-name: default
      - add_ssh_keys:
          fingerprints:
            - "a5:6e:2b:6b:0c:b6:07:4c:fe:60:12:54:f0:35:66:0e" # This is from the CircleCI Console/SSH Permissions
      - run: ssh-keyscan 54.165.68.250 >> ~/.ssh/known_hosts
      - run:
          # Remember to set the environment variable TERM = xterm
          name: Send shell command to AWS
          command:
             # ssh -o StrictHostKeyChecking=no ec2-user@54.165.68.250 -y "echo python --version > log.txt" # Works, but not secure
             ssh ec2-user@54.165.68.250 -y "echo python --version > log.txt"

workflows:
  main:
    jobs:
      - build
      - deploy_aws:
          requires:
             - build